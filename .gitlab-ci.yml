stages:
  - build
  - collect
  - deploy

.build:
  variables:
    EXTRA_CMAKE_FLAGS: ""
  before_script:
    - export CMAKE_CMD="cmake -GNinja -DCMAKE_BUILD_TYPE=Release $EXTRA_CMAKE_FLAGS .."
  script:
      - mkdir -p build/
      - cd build/
      - $CMAKE_CMD
      - ninja

build:debian:10:static:
    extends: .build
    stage: build
    image: volcart/vcbuilder-debian:10_v1.base
    needs: []
    variables:
      EXTRA_CMAKE_FLAGS: "-DBUILD_WITH_QT5=ON"
    tags:
        - docker

build:debian:10:dynamic:
    extends: .build
    stage: build
    image: volcart/vcbuilder-debian:10_v1.base
    needs: []
    variables:
      EXTRA_CMAKE_FLAGS: "-DBUILD_WITH_QT5=ON -DBUILD_SHARED_LIBS=ON"
    tags:
        - docker

build:macos:static:
    extends: .build
    stage: build
    needs: []
    variables:
      EXTRA_CMAKE_FLAGS: "-DBUILD_WITH_QT5=ON -DCMAKE_PREFIX_PATH=/usr/local/opt/gettext/ -DQt5_DIR=/usr/local/opt/qt/lib/cmake/Qt5/"
    tags:
        - deploy
        - osx

build:macos:dynamic:
    extends: .build
    stage: build
    needs: []
    variables:
      EXTRA_CMAKE_FLAGS: "-DBUILD_WITH_QT5=ON -DBUILD_SHARED_LIBS=ON -DCMAKE_PREFIX_PATH=/usr/local/opt/gettext/ -DQt5_DIR=/usr/local/opt/qt/lib/cmake/Qt5/"
    tags:
        - deploy
        - osx

collect:macos:universal:
    extends: .build
    stage: collect
    needs: []
    variables:
      MACOSX_DEPLOYMENT_TARGET: "10.13"
      EXTRA_CMAKE_FLAGS: "-DBUILD_UNIVERSAL_LIBS=ON -DCMAKE_PREFIX_PATH=/usr/local/opt/gettext/"
    artifacts:
      name: "${CI_BUILD_STAGE}_${CI_BUILD_REF_NAME}"
      paths:
        - deps/
      expire_in: 1 day
    tags:
        - deploy
        - osx

deploy:macos:
    only:
        - master
    stage: deploy
    needs: ["collect:macos:universal"]
    script:
        - directory=v$(utils/version-gen.sh)
        - mkdir -p ${directory}
        - tar -czf vcdeps-${directory}.tar.gz deps/
        - cp vcdeps-${directory}.tar.gz ${directory}
        - cp vcdeps-${directory}.tar.gz vcdeps-latest.tar.gz
        - rclone -v copy ${directory}/ vc-deps:releases/${directory}/
        - rclone -v copy vcdeps-latest.tar.gz vc-deps:releases/
    environment: production
    tags:
        - rclone
