stages:
    - build
    - collect
    - deploy

build:debian:static:
    image: volcart/vcbuilder-debian:9_v8.base
    stage: build
    script:
        - echo $CI_BUILD_REF_NAME   $CI_BUILD_STAGE
        - mkdir -p build/
        - cd build/
        - cmake -GNinja -DBUILD_WITH_QT5=ON -DCMAKE_BUILD_TYPE=Release ..
        - ninja
    tags:
        - docker

build:debian:dynamic:
    image: volcart/vcbuilder-debian:9_v8.base
    stage: build
    script:
        - echo $CI_BUILD_REF_NAME   $CI_BUILD_STAGE
        - mkdir -p build/
        - cd build/
        - cmake -GNinja -DBUILD_WITH_QT5=ON -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=ON ..
        - ninja
    tags:
        - docker

build:macos:static:
    stage: build
    script:
        - echo $CI_BUILD_REF_NAME   $CI_BUILD_STAGE
        - mkdir -p build/
        - cd build/
        - cmake -GNinja -DBUILD_WITH_QT5=ON -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=/usr/local/opt/gettext/ -DQt5_DIR=/usr/local/opt/qt/lib/cmake/Qt5/ ..
        - ninja
    tags:
        - deploy
        - osx

build:macos:dynamic:
    stage: build
    script:
        - echo $CI_BUILD_REF_NAME   $CI_BUILD_STAGE
        - mkdir -p build/
        - cd build/
        - cmake -GNinja -DBUILD_WITH_QT5=ON -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=ON -DCMAKE_PREFIX_PATH=/usr/local/opt/gettext/ -DQt5_DIR=/usr/local/opt/qt/lib/cmake/Qt5/ ..
        - ninja
    tags:
        - deploy
        - osx

collect:macos:universal:
    stage: collect
    script:
        - echo $CI_BUILD_REF_NAME   $CI_BUILD_STAGE
        - mkdir -p build/
        - cd build/
        - cmake -GNinja -DCMAKE_BUILD_TYPE=Release -DBUILD_UNIVERSAL_LIBS=ON -DCMAKE_PREFIX_PATH=/usr/local/opt/gettext/ ..
        - ninja
    artifacts:
      name: "${CI_BUILD_STAGE}_${CI_BUILD_REF_NAME}"
      paths:
        - deps/
      expire_in: 1 day
    tags:
        - deploy
        - osx

deploy:macos:
    only:
        - master
    stage: deploy
    dependencies:
        - collect:macos:universal
    script:
        - directory=v$(utils/version-gen.sh)
        - mkdir -p ${directory}
        - tar -czf vcdeps-${directory}.tar.gz deps/
        - cp vcdeps-${directory}.tar.gz ${directory}
        - cp vcdeps-${directory}.tar.gz vcdeps-latest.tar.gz
        - rclone -v copy ${directory}/ vc-deps:releases/${directory}/
        - rclone -v copy vcdeps-latest.tar.gz vc-deps:releases/
    environment: production
    tags:
        - rclone
